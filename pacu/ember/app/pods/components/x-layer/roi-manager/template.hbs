{{#each coloredROIs as |cr|}}
  {{x-layer/roi/static-polygon polygon=cr.roi.neuropil class="neuropil"}}
  {{x-layer/roi-manager/polygon roi=cr.roi class="grabber interact"
    color=cr.color
    onPolygonUpdated=(route-action "updateModel" cr.roi)
    onPolygonDeleted=(route-action "deleteModel" cr.roi)
    onPolygonDoubled=(action "dupe" cr.roi)
    onPolygonClicked=(action "focus" cr.roi)
  }}
  {{!-- Added by RA --}}
  {{!-- Only added unless portion. Allows response to Display Mode option. --}}
  {{#unless passedModeROIs}}
    {{#each cr.roi.polygon as |point|}}
      {{x-layer/roi-manager/circle roi=cr.roi point=point class="grabber interact"
        color=cr.color r=4
        onCircleUpdated=(route-action "updateModel" cr.roi)
      }}
    {{/each}}
  {{/unless}}
  {{x-layer/roi-manager/circle point=cr.roi.centroid r=1 class="centroid"}}
{{/each}}

<style>
{{!-- Added by RA --}}
{{!-- toggleROIs status passed to here as passedToggleROIs. Updates ROI visibility based of state. --}}
{{#unless passedToggleROIs}}
#{{elementId}}{
  visibility: hidden;
}
{{/unless}}
#{{elementId}} circle {
  stroke-width: 1px;
}
#{{elementId}} polygon {
  stroke-width: 1px;
}
#{{elementId}} polygon.neuropil {
  stroke-width: 1px;
  fill: rgba(0, 0, 0, 0.1);
}

</style>
