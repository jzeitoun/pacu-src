<div class="ui {{if busy 'active'}} dimmer">
  <div class="ui text inverted loader">Please wait...</div>
</div>
<button {{action "toggleResource"}}
  class="ui inverted {{if state "red" "blue"}} button" >
  Click to {{if state "relaese" "acquire"}} device #{{attrs.src}}...
</button>
  {{!--
<div class="ui inverted segment">
  <p class="ui inverted blue label">{{stateStr}}</p>
  <p class="ui inverted red label"> {{if onair "On air" "Idle"}} </p>
</div>
  --}}
<div class="ui segment" style="display: {{if state 'block' 'none'}}">
  <div class="ui top attached tabular menu">
    <a class="item active" data-tab="information">Information</a>
    <a class="item"        data-tab="features">Features</a>
    <a class="item"        data-tab="mode">Mode</a>
    <a class="item"        data-tab="handler">Handler</a>
    <a class="item"        data-tab="on-air">On Air</a>
  </div>
  <div class="ui bottom attached tab segment active" data-tab="information">
    <div class="ui raised segment">
      <p>Basic information about this device.</p>
    </div>
    {{#if state}}
    <table class="ui compact table">
      {{#each infos as |i|}}
        <tr><td>{{i}}</td><td>{{x-andor-feature-input
                              meta=(get features i)}}</td></tr>
      {{/each}}
    </table>
    {{/if}}
  </div>
  <div class="ui bottom attached tab segment" data-tab="features">
    <div class="ui raised segment">
      <p>Below parameters are essential features to setup recoding session.
         By Andor's design, changing a parameter may cause other parameters 
         <strong>changed</strong> as well.
         Also, some of parameters may become 
         <strong>read-only</strong> or <strong>fixed</strong> 
         value on a specific acquisition mode.
         So it is recommended to make sure all parameters correct 
         before proceed to recording.
      </p>
    </div>
    {{#if state}}
    <table class="ui compact table">
      {{#each feats as |f|}}
        <tr><td>{{f}}</td><td>{{x-andor-feature-input
                              meta=(get features f)
                              onUpdate=(action "setFeature")}}</td></tr>
      {{/each}}
    </table>
    {{/if}}

  </div>
  <div class="ui bottom attached tab segment" data-tab="mode">
    <div class="ui raised segment">
      <p>In this tab, you can setup how the camera gathers each frame. 
         A mode can be explained like a "feature combination" of trigger source, 
         frame count and rate, exposure time and method, memory buffering and etc.
         PACU provides optimized presets to meet the most of imaging method needs.
         Please select one and setup details...
      </p>
    </div>
    <div class="ui cards">
      <div class="card action-coloring noselect" {{action "setSimpleStreaming"}}>
        <div class="content">
          <div class="header">Simple Streaming</div>
          <div class="meta">Internal Trigger</div>
          <div class="description">
            Most of the time, you would need this for setup your imaging session. 
            When you physically setup between the viewport of camera and the subject, 
            it gives you a "preview" of frames being gathered.
          </div>
        </div>
      </div>
      <div class="card action-coloring noselect" {{action "setStimulationDriven"}}>
        <div class="content">
          <div class="header">Stimulation Driven</div>
          <div class="meta">External Trigger</div>
          <div class="description">
            This would be one of the main modes for having your actual imaging session.
            Frame rate and count are determined by external trigger. Can not vary exposure time a frame by frame.
            So the stimulation software is responsible for sending accurate timing through the I/O timing cable.
          </div>
        </div>
      </div>
      <div class="card action-coloring">
        <div class="content">
          <div class="header">...</div>
          <div class="meta">...</div>
          <div class="description">
            In preparation...will be added in future version.
          </div>
        </div>
      </div>
    </div>
    <div class="ui clearing divider"></div>
    {{#if state}}
    <table class="ui compact table">
      {{#each modes as |f|}}
        <tr><td>{{f}}</td><td>{{x-andor-feature-input
                              meta=(get features f)
                              nosubmit=true
                              onUpdate=(action "setFeature")}}</td></tr>
      {{/each}}
    </table>
    <div class="ui clearing divider"></div>
    <button class="fluid ui blue button" {{action "updateMode"}}>Update and see if this mode was setup properly.</button>
    {{/if}}
  </div>
  <div class="ui bottom attached tab segment" data-tab="handler">
    <div class="ui raised segment">
      <p>When each frame is acquired by the camera, you can setup how the frame should be handled.
          If you want to setup for preview, select BypassHandler. For now, 
          WriterHandler writes files to the user's desktop directory.
      </p>
    </div>

    <div class="ui cards">
      <div class="card action-coloring noselect" {{action "selectHandler" "bypass"}}>
        <div class="content">
          <div class="header">Bypass</div>
          <div class="description">
            This simply does nothing. Acquired frames will be discarded. So it is useful for preview.
          </div>
        </div>
      </div>
      <div class="card action-coloring noselect" {{action "selectHandler" "writer"}}>
        <div class="content">
          <div class="header">Write to disk</div>
          <div class="meta">Chunked by trial</div>
          <div class="description">
            Two files will be saved. Actual TIFF stack and Metadata file. 
            Metadata is a CSV file which may contain timestamp and some useful pre-calculated values.
          </div>
        </div>
      </div>
      <div class="card action-coloring noselect" {{action "selectHandler" "writer_by_ttl"}}>
        <div class="content">
          <div class="header">Write to disk</div>
          <div class="meta">Chunked by TTL</div>
          <div class="description">
            Imaging session is controlled by TTL pulse coming through LabJack device.
            Recording file closed at every rising edge, and new one opened at every falling edge.
            So this way, users can control a number of recording chunk with TTL pulse.
          </div>
        </div>
      </div>
    </div>

    <div class="ui clearing divider"></div>
    {{#if state}}
    <table class="ui compact table">
      {{#each (get handlers handlerName) as |f|}}
        <tr><td>{{f.feature}}</td><td>{{x-andor-feature-input
                              meta=f
                              nosubmit=true
                              }}</td></tr>
      {{/each}}
    </table>
    <div class="ui clearing divider"></div>
    <button class="fluid ui blue button" {{action "setHandler" handlerName (get handlers handlerName)}}>
      Update and see if this handler was setup properly.</button>
    {{/if}}

  </div>
  <div class="ui bottom attached tab segment" data-tab="on-air">

    <div class="ui raised segment">
      <p>
        PACU does not automatically turn on and off its acquisition state.
        This means that even if a synchronization with external stimulus is running,
        only exposure and buffering will be done automatically.
        Turning camera on and off should be done manually.
      </p>
      <p>At this time, AOI position only can be modified when the recording session is off.
      Navigating out of this page or current tab will automatically stop current acquisition.
      Timestamp of each frame is determined by the camera internal clock. So this is reliable.
      {{!Colormap is only for viewing purpose, it does not affect actual data.}}
      </p>
    </div>

    <button {{action "toggleRecording"}}
      class="ui inverted {{if onair "red" "blue"}} button" >
      Click to {{if onair "stop" "start"}} recording...
    </button>
    <div class="ui slider checkbox">
      {{input type="checkbox" name="bypass" checked=bypass}}
      <label>Bypass</label>
    </div>
    {{sui-model-select
      value=0
      items=cmapNames
      nofluid=true
      onChange=(action "setCmap")
    }}
    <div class="ui clearing divider"></div>
    {{#if onair}}
      <div class="ui slider checkbox">
        {{input type="checkbox" name="stream" checked=streamOn}}
        <label>Interval@{{streamITV}}</label>
      </div>
      <button {{action "snapCurrentFrame"}} class="ui blue basic button" >
        Snap
      </button>
    {{/if}}
    {{input class="andor-feature-aoileft" type="range" step="1"
        disabled=onair
        min=aoileftmin max=aoileftmax value=features.AOILeft.value}}
    {{#sui-popup selector=".andor-feature-aoileft" offset=8}}
      AOILeft: {{features.AOILeft.value}}
    {{/sui-popup}}
    {{input class="andor-feature-aoitop" type="range" step="1"
        disabled=onair
        min=aoitopmin max=aoitopmax value=features.AOITop.value}}
    {{#sui-popup selector=".andor-feature-aoitop" offset=8}}
      AOITop: {{features.AOITop.value}}
    {{/sui-popup}}
    <div style="margin: 0 auto;
                width: {{features.AOIWidth.value}}px;
                height: {{features.AOIHeight.value}}px;">
      {{x-canvas-arraybuffer
          buf=currentBuffer
          width=features.AOIWidth.value
          height=features.AOIHeight.value
          staticPos=true}}
    </div>
  </div>
</div>
{{!<div style="margin: 0 auto; width: {stackX}px; height: {stackY}px;">}}
